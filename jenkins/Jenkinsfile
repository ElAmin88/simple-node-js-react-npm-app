pipeline{
	agent any
	stages{
		
		stage("test"){
			steps{
			nodejs(nodeJSInstallationName:'nodejs'){	
			   sh "npm install"
			   sh "npm run build"
				def scannerHome = tool 'sonarqube-container';
				   withSonarQubeEnv("test-npm") {
				   sh "${tool("sonarqube-container")}/bin/sonar-scanner \
				   -Dsonar.projectKey=test-npm  \
				   -Dsonar.sources=. \
				   -Dsonar.css.node=. \
				   -Dsonar.host.url=http://129.151.158.98:9000  \
				   -Dsonar.login=41986a4b64f343f848e8ecd65dbfabd6d12b0b62"
				       }
		          // sh "docker -v"
			}	
			}
			
			
			
		}
 		stage("sonarqube analysis"){
			
			steps {
			       script {
//			       def scannerHome = tool 'sonarqube-container';
//				   withSonarQubeEnv("test-npm") {
//				   sh "${tool("sonarqube-container")}/bin/sonar-scanner \
//				   -Dsonar.projectKey=test-npm  \
//				   -Dsonar.sources=. \
//				   -Dsonar.css.node=. \
//				   -Dsonar.host.url=http://129.151.158.98:9000  \
//				   -Dsonar.login=41986a4b64f343f848e8ecd65dbfabd6d12b0b62"
				       }
				   }
			}
//  			steps{
// 				nodejs(nodeJSInstallationName:'nodejs'){
// 					sh "npm install"
//  					withSonarQubeEnv("SonarQube Scanner"){
 					
//   						sh "npm install sonar-scanner"
//  					} 				
// 				}
				
			
					
				  
//  			}
 		}
	}

